<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net7.0-windows</TargetFramework>
    <AssemblyName>GitHubBackupTool</AssemblyName>
    <Copyright>Copyright Â© Michael Morten Sonne</Copyright>
    <Authors>Michael Morten Sonne</Authors>
    <Product>GitHub Backup</Product>
    <ApplicationIcon>Resources\github_git_icon.ico</ApplicationIcon>
    <PackageIcon>github_git_icon.ico</PackageIcon>
    <AssemblyVersion></AssemblyVersion>
    <FileVersion />
    <Version>1.2.0.0</Version>
    <ApplicationManifest>app.manifest</ApplicationManifest>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <IsPublishable>True</IsPublishable>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <IsPublishable>True</IsPublishable>
  </PropertyGroup>
	<PropertyGroup>
		<PowerShellExe Condition=" '$(PowerShellExe)'=='' ">
			$(SystemRoot)\System32\WindowsPowerShell\v1.0\powershell.exe
		</PowerShellExe>
	</PropertyGroup>
  <ItemGroup>
    <Content Include="Resources\github_git_icon.ico" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Autofac" Version="8.0.0" />
    <PackageReference Include="LibGit2Sharp" Version="0.28.0" />
    <PackageReference Include="McMaster.Extensions.CommandLineUtils" Version="4.1.1" />
    <PackageReference Include="Microsoft.Windows.Compatibility" Version="8.0.3" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="Octokit" Version="10.0.0" />
    <PackageReference Include="ShellProgressBar" Version="5.2.0" />
  </ItemGroup>
  <ItemGroup>
    <None Update="Resources\github_git_icon.ico">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>
  <!-- Define a post-build target for Release configuration -->
  <!--<Target Name="PostBuild" AfterTargets="PostBuildEvent" Condition="'$(Configuration)' == 'Release'">
    <Exec Command="powershell.exe -NoProfile -ExecutionPolicy Bypass -File &quot;C:\Program Files (x86)\Windows Kits\10\App Certification Kit\signtool.exe&quot; sign /n &quot;Michael Morten Sonne&quot; /fd sha256 /tr http://timestamp.sectigo.com /td sha256 /as /v &quot;$(TargetPath)&quot;&#xD;&#xA;&#xD;&#xA;powershell -NoProfile -ExecutionPolicy Bypass -File &quot;$(SolutionDir)\Scripts\RenameOutputRelease.ps1&quot; &quot;$(TargetDir)&quot;" />
  </Target>-->
  <Target Name="PostBuildRelease" AfterTargets="Build" Condition="'$(Configuration)' == 'Release'">
    <Exec Command="&quot;C:\Program Files (x86)\Windows Kits\10\App Certification Kit\signtool.exe&quot; sign /n &quot;Michael Morten Sonne&quot; /fd sha256 /tr http://timestamp.sectigo.com /td sha256 /as /v &quot;$(TargetPath)&quot;" />
    <Exec Command="&quot;C:\Program Files (x86)\Windows Kits\10\App Certification Kit\signtool.exe&quot; sign /n &quot;Michael Morten Sonne&quot; /fd sha256 /tr http://timestamp.sectigo.com /td sha256 /as /v &quot;$(TargetDir)$(AssemblyName).exe&quot;" />
    <Exec Command="$(PowerShellExe) powershell.exe -ExecutionPolicy Bypass -File &quot;$(ProjectDir)Scripts\RenameOutputRelease.ps1&quot; $(TargetDir)" />
  </Target>
</Project>